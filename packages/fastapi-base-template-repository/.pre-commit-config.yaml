# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-toml # Check TOML files
      - id: check-yaml # Check YAML files
        args:
          - --unsafe
      - id: check-docstring-first # Check docstring presence
      - id: detect-aws-credentials # Detect AWS credentials in files
      - id: end-of-file-fixer # Ensure files end with a newline
        exclude: |
          (?x)^(
              app/core/db/migrations/.*
          )$
      - id: trailing-whitespace # Trailing whitespace checker
        exclude: ^app/core/db/migrations/.*
      - id: check-json # Check JSON syntax
      - id: check-xml # Check XML syntax (only checks syntax, not validity)
      - id: requirements-txt-fixer # Fixup requirements.txt files
      - id: mixed-line-ending # Check for mixed line endings
      - id: no-commit-to-branch
        args: [--branch, main, --branch, develop, --branch, release/*] # Prevents commits to main and develop and release branches

  # Formatting and Linting for all files with ruff
  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.7.2
    hooks:
      - id: ruff
        args:
          - --fix
          - --config=.rc/ruff.toml

  # Linting for all files with pylint
  - repo: local
    hooks:
      - id: pylint
        name: pylint
        entry: python -m pylint
        language: system
        types: [python]
        exclude: ^tests/.*$ # Exclude test files completely from pylint
        args: ["-rn", "--rcfile=.rc/.pylintrc"]

  # Formatting all non-python files with prettier
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: "v4.0.0-alpha.8"
    hooks:
      - id: prettier
        files: ".(json|md|yaml|yml|html|js)$"
        args: [--prose-wrap=always, --print-width=120]

  # Linting for docker files
  - repo: https://github.com/AleksaC/hadolint-py
    rev: v2.12.1b3
    hooks:
      - id: hadolint
        args: [--ignore, DL3008, --ignore, DL3007, --ignore, DL4006]
        exclude: ^app/core/db/migrations/.*

  # Checking for errors in shell scripts with shellcheck
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck

  # Python type checker
  - repo: local
    hooks:
      - id: mypy
        name: mypy
        entry: poetry run mypy
        language: system
        types: [python]
        require_serial: true
        args: ["--config-file", ".rc/mypy.ini"]

  # Python AST-based static analyzer from OpenStack Security Group.
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.10
    hooks:
      - id: bandit
        args:
          - -r
          - -lll
          - --config=pyproject.toml
        additional_dependencies:
          - tomli

  # Add a trailer into a commit message indicating the hook has been executed.
  - repo: https://gitlab.com/adam-moss/pre-commit-trailer
    rev: v1.1.0
    hooks:
      - id: add-pre-commit-config-trailer # Add a pre-commit config trailer to files
      - id: add-pre-commit-user-skipped-trailer # Add a pre-commit user skipped trailer to files

  # Find dead code in Python code
  - repo: https://github.com/jendrikseipp/vulture
    rev: "v2.13"
    hooks:
      - id: vulture
        args: ["app"]

  # Code spell checker for Python
  - repo: https://github.com/codespell-project/codespell
    rev: v2.2.6
    hooks:
      - id: codespell
        args: ["--config", ".rc/.codespellrc"]
        exclude: ^poetry\.lock$
        additional_dependencies:
          - tomli

  # Commit message linter and formatter
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.30.0
    hooks:
      - id: commitizen
        stages: [commit-msg]
